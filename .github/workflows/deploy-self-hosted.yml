name: Deploy with Self-Hosted Runner (Most Secure)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted  # Runs directly on your VPS
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Load environment variables
      run: |
        cd ${{ github.workspace }}
        export $(cat .env | grep -v '^#' | xargs)
        
    - name: Build and deploy
      run: |
        cd ${{ github.workspace }}
        
        # Stop existing containers
        docker-compose -f docker-compose.yml -f docker-compose.production.yml down
        
        # Build with no cache for fresh deployment
        docker-compose -f docker-compose.yml -f docker-compose.production.yml build --no-cache
        
        # Start services
        docker-compose -f docker-compose.yml -f docker-compose.production.yml up -d
        
        # Wait for services to be ready
        echo "Waiting for services to start..."
        sleep 30
        
        # Health checks
        echo "Checking application health..."
        curl -f http://localhost:3000/api/health || exit 1
        curl -f http://localhost:4000/health || exit 1
        
        echo "✅ Deployment successful!"
        
    - name: Cleanup old images
      run: |
        # Remove dangling images to save disk space
        docker image prune -f
        
    - name: Send deployment notification
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment to production completed successfully"
          # Add webhook notification here if needed
        else
          echo "❌ Deployment failed"
          # Add error notification here if needed
        fi